{"version":3,"file":"aframe-html.min.js","sources":["../src/HTMLMesh.js","../src/aframe-html.js"],"sourcesContent":["// This is a copy of https://github.com/mrdoob/three.js/blob/0403020848c26a9605eb91c99a949111ad4a532e/examples/jsm/interactive/HTMLMesh.js\n// with the following changes:\n// - Revert back to using \"this.encoding = sRGBEncoding\" instead of \"this.colorSpace = SRGBColorSpace;\" for compatibility with three r147 aframe 1.4.2\n// - window.dispatchEvent line commented, see the TODO below.\n// Look at https://github.com/mrdoob/three.js/commits/dev/examples/jsm/interactive/HTMLMesh.js\n// to see if there are other changes that can be retrieved here.\nimport {\n\tCanvasTexture,\n\tLinearFilter,\n\tMesh,\n\tMeshBasicMaterial,\n\tPlaneGeometry,\n\tsRGBEncoding,\n\tColor\n} from 'three';\n\nclass HTMLMesh extends Mesh {\n\n\tconstructor( dom ) {\n\n\t\tconst texture = new HTMLTexture( dom );\n\n\t\tconst geometry = new PlaneGeometry( texture.image.width * 0.001, texture.image.height * 0.001 );\n\t\tconst material = new MeshBasicMaterial( { map: texture, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tfunction onEvent( event ) {\n\n\t\t\tmaterial.map.dispatchDOMEvent( event );\n\n\t\t}\n\n\t\tthis.addEventListener( 'mousedown', onEvent );\n\t\tthis.addEventListener( 'mousemove', onEvent );\n\t\tthis.addEventListener( 'mouseup', onEvent );\n\t\tthis.addEventListener( 'click', onEvent );\n\n\t\tthis.dispose = function () {\n\n\t\t\tgeometry.dispose();\n\t\t\tmaterial.dispose();\n\n\t\t\tmaterial.map.dispose();\n\n\t\t\tcanvases.delete( dom );\n\n\t\t\tthis.removeEventListener( 'mousedown', onEvent );\n\t\t\tthis.removeEventListener( 'mousemove', onEvent );\n\t\t\tthis.removeEventListener( 'mouseup', onEvent );\n\t\t\tthis.removeEventListener( 'click', onEvent );\n\n\t\t};\n\n\t}\n\n}\n\nclass HTMLTexture extends CanvasTexture {\n\n\tconstructor( dom ) {\n\n\t\tsuper( html2canvas( dom ) );\n\n\t\tthis.dom = dom;\n\n\t\tthis.anisotropy = 16;\n\t\tthis.encoding = sRGBEncoding;\n\t\tthis.minFilter = LinearFilter;\n\t\tthis.magFilter = LinearFilter;\n\n\t\t// Create an observer on the DOM, and run html2canvas update in the next loop\n\t\tconst observer = new MutationObserver( () => {\n\n\t\t\tif ( ! this.scheduleUpdate ) {\n\n\t\t\t\t// ideally should use xr.requestAnimationFrame, here setTimeout to avoid passing the renderer\n\t\t\t\tthis.scheduleUpdate = setTimeout( () => this.update(), 16 );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst config = { attributes: true, childList: true, subtree: true, characterData: true };\n\t\tobserver.observe( dom, config );\n\n\t\tthis.observer = observer;\n\n\t}\n\n\tdispatchDOMEvent( event ) {\n\n\t\tif ( event.data ) {\n\n\t\t\thtmlevent( this.dom, event.type, event.data.x, event.data.y );\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tthis.image = html2canvas( this.dom );\n\t\tthis.needsUpdate = true;\n\n\t\tthis.scheduleUpdate = null;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.observer ) {\n\n\t\t\tthis.observer.disconnect();\n\n\t\t}\n\n\t\tthis.scheduleUpdate = clearTimeout( this.scheduleUpdate );\n\n\t\tsuper.dispose();\n\n\t}\n\n}\n\n\n//\n\nconst canvases = new WeakMap();\n\nfunction html2canvas( element ) {\n\n\tconst range = document.createRange();\n\tconst color = new Color();\n\n\tfunction Clipper( context ) {\n\n\t\tconst clips = [];\n\t\tlet isClipping = false;\n\n\t\tfunction doClip() {\n\n\t\t\tif ( isClipping ) {\n\n\t\t\t\tisClipping = false;\n\t\t\t\tcontext.restore();\n\n\t\t\t}\n\n\t\t\tif ( clips.length === 0 ) return;\n\n\t\t\tlet minX = - Infinity, minY = - Infinity;\n\t\t\tlet maxX = Infinity, maxY = Infinity;\n\n\t\t\tfor ( let i = 0; i < clips.length; i ++ ) {\n\n\t\t\t\tconst clip = clips[ i ];\n\n\t\t\t\tminX = Math.max( minX, clip.x );\n\t\t\t\tminY = Math.max( minY, clip.y );\n\t\t\t\tmaxX = Math.min( maxX, clip.x + clip.width );\n\t\t\t\tmaxY = Math.min( maxY, clip.y + clip.height );\n\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect( minX, minY, maxX - minX, maxY - minY );\n\t\t\tcontext.clip();\n\n\t\t\tisClipping = true;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tadd: function ( clip ) {\n\n\t\t\t\tclips.push( clip );\n\t\t\t\tdoClip();\n\n\t\t\t},\n\n\t\t\tremove: function () {\n\n\t\t\t\tclips.pop();\n\t\t\t\tdoClip();\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction getLines( ctx, text, maxWidth ) {\n\t\tconst words = text.split( \" \" );\n\t\tconst lines = [];\n\t\tlet currentLine = words[0];\n\n\t\tfor (let i = 1; i < words.length; i++) {\n\n\t\t\tconst word = words[i];\n\t\t\tconst width = ctx.measureText( currentLine + \" \" + word ).width;\n\t\t\tif ( width < maxWidth ) {\n\t\t\t\tcurrentLine += \" \" + word;\n\t\t\t} else {\n\t\t\t\tlines.push( currentLine );\n\t\t\t\tcurrentLine = word;\n\t\t\t}\n\t\t}\n\t\tlines.push(currentLine);\n\t\treturn lines;\n\t}\n\n\tfunction drawText( style, x, y, string, maxWidth ) {\n\n\t\tif ( string !== '' ) {\n\n\t\t\tif ( style.textTransform === 'uppercase' ) {\n\n\t\t\t\tstring = string.toUpperCase();\n\n\t\t\t}\n\n\t\t\tcontext.font = style.fontWeight + ' ' + style.fontSize + ' ' + style.fontFamily;\n\t\t\tcontext.textBaseline = 'top';\n\t\t\tcontext.fillStyle = style.color;\n\t\t\tif ( !maxWidth ) {\n\t\t\t\tcontext.fillText( string, x, y + parseFloat( style.fontSize ) * 0.1 );\n\t\t\t} else {\n\t\t\t\tconst lines = getLines(context, string, maxWidth);\n\t\t\t\tlines.forEach(function(line, i) {\n\t\t\t\t\tcontext.fillText( line, x, y + parseFloat( style.fontSize ) * 0.1 + i * parseFloat( style.fontSize ) * 1.3 );\n\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction buildRectPath( x, y, w, h, r ) {\n\n\t\tif ( w < 2 * r ) r = w / 2;\n\t\tif ( h < 2 * r ) r = h / 2;\n\n\t\tcontext.beginPath();\n\t\tcontext.moveTo( x + r, y );\n\t\tcontext.arcTo( x + w, y, x + w, y + h, r );\n\t\tcontext.arcTo( x + w, y + h, x, y + h, r );\n\t\tcontext.arcTo( x, y + h, x, y, r );\n\t\tcontext.arcTo( x, y, x + w, y, r );\n\t\tcontext.closePath();\n\n\t}\n\n\tfunction drawBorder( style, which, x, y, width, height ) {\n\n\t\tconst borderWidth = style[ which + 'Width' ];\n\t\tconst borderStyle = style[ which + 'Style' ];\n\t\tconst borderColor = style[ which + 'Color' ];\n\n\t\tif ( borderWidth !== '0px' && borderStyle !== 'none' && borderColor !== 'transparent' && borderColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\tcontext.strokeStyle = borderColor;\n\t\t\tcontext.lineWidth = parseFloat( borderWidth );\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo( x, y );\n\t\t\tcontext.lineTo( x + width, y + height );\n\t\t\tcontext.stroke();\n\n\t\t}\n\n\t}\n\n\tfunction drawElement( element, style ) {\n\n\t\tlet x = 0, y = 0, width = 0, height = 0;\n\n\t\tif ( element.nodeType === Node.TEXT_NODE ) {\n\n\t\t\t// text\n\n\t\t\trange.selectNode( element );\n\n\t\t\tconst rect = range.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\t\t\t// On Quest the font used to draw on canvas is bigger than on\n\t\t\t// the desktop, compensate for this.\n\t\t\tconst maxWidth = width * 1.01; // 1.005 is good, but use 1.01 to be sure\n\n\t\t\tdrawText( style, x, y, element.nodeValue.trim(), maxWidth );\n\n\t\t} else if ( element.nodeType === Node.COMMENT_NODE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( element instanceof HTMLCanvasElement ) {\n\n\t\t\t// Canvas element\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\n\t\t        context.save();\n\t\t\tconst dpr = window.devicePixelRatio;\n\t\t\tcontext.scale( 1 / dpr, 1 / dpr );\n\t\t\tcontext.drawImage( element, x, y );\n\t\t\tcontext.restore();\n\n\t\t} else if ( element instanceof HTMLImageElement ) {\n\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tcontext.drawImage( element, x, y, width, height );\n\n\t\t} else {\n\n\t\t\tif ( element.style.display === 'none' ) return;\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tx = rect.left - offset.left - 0.5;\n\t\t\ty = rect.top - offset.top - 0.5;\n\t\t\twidth = rect.width;\n\t\t\theight = rect.height;\n\n\t\t\tstyle = window.getComputedStyle( element );\n\n\t\t\t// Get the border of the element used for fill and border\n\n\t\t\tbuildRectPath( x, y, width, height, parseFloat( style.borderRadius ) );\n\n\t\t\tconst backgroundColor = style.backgroundColor;\n\n\t\t\tif ( backgroundColor !== 'transparent' && backgroundColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\t\tcontext.fillStyle = backgroundColor;\n\t\t\t\tcontext.fill();\n\n\t\t\t}\n\n\t\t\t// If all the borders match then stroke the round rectangle\n\n\t\t\tconst borders = [ 'borderTop', 'borderLeft', 'borderBottom', 'borderRight' ];\n\n\t\t\tlet match = true;\n\t\t\tlet prevBorder = null;\n\n\t\t\tfor ( const border of borders ) {\n\n\t\t\t\tif ( prevBorder !== null ) {\n\n\t\t\t\t\tmatch = ( style[ border + 'Width' ] === style[ prevBorder + 'Width' ] ) &&\n\t\t\t\t\t( style[ border + 'Color' ] === style[ prevBorder + 'Color' ] ) &&\n\t\t\t\t\t( style[ border + 'Style' ] === style[ prevBorder + 'Style' ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( match === false ) break;\n\n\t\t\t\tprevBorder = border;\n\n\t\t\t}\n\n\t\t\tif ( match === true ) {\n\n\t\t\t\t// They all match so stroke the rectangle from before allows for border-radius\n\n\t\t\t\tconst width = parseFloat( style.borderTopWidth );\n\n\t\t\t\tif ( style.borderTopWidth !== '0px' && style.borderTopStyle !== 'none' && style.borderTopColor !== 'transparent' && style.borderTopColor !== 'rgba(0, 0, 0, 0)' ) {\n\n\t\t\t\t\tcontext.strokeStyle = style.borderTopColor;\n\t\t\t\t\tcontext.lineWidth = width;\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Otherwise draw individual borders\n\n\t\t\t\tdrawBorder( style, 'borderTop', x, y, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderLeft', x, y, 0, height );\n\t\t\t\tdrawBorder( style, 'borderBottom', x, y + height, width, 0 );\n\t\t\t\tdrawBorder( style, 'borderRight', x + width, y, 0, height );\n\n\t\t\t}\n\n\t\t\tif ( element instanceof HTMLInputElement ) {\n\n\t\t\t\tlet accentColor = style.accentColor;\n\n\t\t\t\tif ( accentColor === undefined || accentColor === 'auto' ) accentColor = style.color;\n\n\t\t\t\tcolor.set( accentColor );\n\n\t\t\t\tconst luminance = Math.sqrt( 0.299 * ( color.r ** 2 ) + 0.587 * ( color.g ** 2 ) + 0.114 * ( color.b ** 2 ) );\n\t\t\t\tconst accentTextColor = luminance < 0.5 ? 'white' : '#111111';\n\n\t\t\t\tif ( element.type === 'radio' ) {\n\n\t\t\t\t\tbuildRectPath( x, y, width, height, height );\n\n\t\t\t\t\tcontext.fillStyle = 'white';\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tif ( element.checked ) {\n\n\t\t\t\t\t\tbuildRectPath( x + 2, y + 2, width - 4, height - 4, height );\n\n\t\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\t\tcontext.strokeStyle = accentTextColor;\n\t\t\t\t\t\tcontext.lineWidth = 2;\n\t\t\t\t\t\tcontext.fill();\n\t\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( element.type === 'checkbox' ) {\n\n\t\t\t\t\tbuildRectPath( x, y, width, height, 2 );\n\n\t\t\t\t\tcontext.fillStyle = element.checked ? accentColor : 'white';\n\t\t\t\t\tcontext.strokeStyle = element.checked ? accentTextColor : accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tif ( element.checked ) {\n\n\t\t\t\t\t\tconst currentTextAlign = context.textAlign;\n\n\t\t\t\t\t\tcontext.textAlign = 'center';\n\n\t\t\t\t\t\tconst properties = {\n\t\t\t\t\t\t\tcolor: accentTextColor,\n\t\t\t\t\t\t\tfontFamily: style.fontFamily,\n\t\t\t\t\t\t\tfontSize: height + 'px',\n\t\t\t\t\t\t\tfontWeight: 'bold'\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tdrawText( properties, x + ( width / 2 ), y, '✔' );\n\n\t\t\t\t\t\tcontext.textAlign = currentTextAlign;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( element.type === 'range' ) {\n\n\t\t\t\t\tconst [ min, max, value ] = [ 'min', 'max', 'value' ].map( property => parseFloat( element[ property ] ) );\n\t\t\t\t\tconst position = ( ( value - min ) / ( max - min ) ) * ( width - height );\n\n\t\t\t\t\tbuildRectPath( x, y + ( height / 4 ), width, height / 2, height / 4 );\n\t\t\t\t\tcontext.fillStyle = accentTextColor;\n\t\t\t\t\tcontext.strokeStyle = accentColor;\n\t\t\t\t\tcontext.lineWidth = 1;\n\t\t\t\t\tcontext.fill();\n\t\t\t\t\tcontext.stroke();\n\n\t\t\t\t\tbuildRectPath( x, y + ( height / 4 ), position + ( height / 2 ), height / 2, height / 4 );\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t\tbuildRectPath( x + position, y, height, height, height / 2 );\n\t\t\t\t\tcontext.fillStyle = accentColor;\n\t\t\t\t\tcontext.fill();\n\n\t\t\t\t}\n\n\t\t\t\tif ( element.type === 'color' || element.type === 'text' || element.type === 'number' ) {\n\n\t\t\t\t\tclipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\t\t\t\tdrawText( style, x + parseInt( style.paddingLeft ), y + parseInt( style.paddingTop ), element.value );\n\n\t\t\t\t\tclipper.remove();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\t// debug\n\t\tcontext.strokeStyle = '#' + Math.random().toString( 16 ).slice( - 3 );\n\t\tcontext.strokeRect( x - 0.5, y - 0.5, width + 1, height + 1 );\n\t\t*/\n\n\t\tconst isClipping = style.overflow === 'auto' || style.overflow === 'hidden';\n\n\t\tif ( isClipping ) clipper.add( { x: x, y: y, width: width, height: height } );\n\n\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\tdrawElement( element.childNodes[ i ], style );\n\n\t\t}\n\n\t\tif ( isClipping ) clipper.remove();\n\n\t}\n\n\tconst offset = element.getBoundingClientRect();\n\n\tlet canvas = canvases.get( element );\n\n\tif ( canvas === undefined ) {\n\n\t\tcanvas = document.createElement( 'canvas' );\n\t\tcanvas.width = offset.width;\n\t\tcanvas.height = offset.height;\n\t\tcanvases.set( element, canvas );\n\n\t}\n\n\tconst context = canvas.getContext( '2d'/*, { alpha: false }*/ );\n\n\tconst clipper = new Clipper( context );\n\n\t// console.time( 'drawElement' );\n\n\tcontext.clearRect(0, 0, canvas.width, canvas.height);\n\n\tdrawElement( element );\n\n\t// console.timeEnd( 'drawElement' );\n\n\treturn canvas;\n\n}\n\nfunction htmlevent( element, event, x, y ) {\n\n\tconst mouseEventInit = {\n\t\tclientX: ( x * element.offsetWidth ) + element.offsetLeft,\n\t\tclientY: ( y * element.offsetHeight ) + element.offsetTop,\n\t\tview: element.ownerDocument.defaultView\n\t};\n\n\t// TODO: Find out why this is added. Keep commented out when this file is updated\n\t// window.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\tconst rect = element.getBoundingClientRect();\n\n\tx = x * rect.width + rect.left;\n\ty = y * rect.height + rect.top;\n\n\tfunction traverse( element ) {\n\n\t\tif ( element.nodeType !== Node.TEXT_NODE && element.nodeType !== Node.COMMENT_NODE ) {\n\n\t\t\tconst rect = element.getBoundingClientRect();\n\n\t\t\tif ( x > rect.left && x < rect.right && y > rect.top && y < rect.bottom ) {\n\n\t\t\t\telement.dispatchEvent( new MouseEvent( event, mouseEventInit ) );\n\n\t\t\t\tif ( element instanceof HTMLInputElement && element.type === 'range' && ( event === 'mousedown' || event === 'click' ) ) {\n\n\t\t\t\t\tconst [ min, max ] = [ 'min', 'max' ].map( property => parseFloat( element[ property ] ) );\n\n\t\t\t\t\tconst width = rect.width;\n\t\t\t\t\tconst offsetX = x - rect.x;\n\t\t\t\t\tconst proportion = offsetX / width;\n\t\t\t\t\telement.value = min + ( max - min ) * proportion;\n\t\t\t\t\telement.dispatchEvent( new InputEvent( 'input', { bubbles: true } ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0; i < element.childNodes.length; i ++ ) {\n\n\t\t\t\ttraverse( element.childNodes[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttraverse( element );\n\n}\n\nexport { HTMLMesh };\n","/* jshint esversion: 9, -W097 */\n/* For dealing with spline curves */\n/* global THREE, AFRAME, setTimeout, console */\n'use strict';\n\nimport { HTMLMesh } from './HTMLMesh.js';\n\nconst schemaHTML = {\n\thtml: {\n\t\ttype: 'selector',\n\t},\n\tcursor: {\n\t\ttype: 'selector',\n\t}\n};\n\ndocumentation:\n{\n\tschemaHTML.html.description = `HTML element to use.`;\n\tschemaHTML.cursor.description = `Visual indicator for where the user is currently pointing`;\n}\n\nconst _pointer = new THREE.Vector2();\nconst _event = { type: '', data: _pointer };\nAFRAME.registerComponent('html', {\n\tschema: schemaHTML,\n\tinit() {\n\t\tthis.rerender = this.rerender.bind(this);\n\t\tthis.handle = this.handle.bind(this);\n\t\tthis.onClick = e => this.handle('click', e);\n\t\tthis.onMouseLeave = e => this.handle('mouseleave', e);\n\t\tthis.onMouseEnter = e => this.handle('mouseenter', e);\n\t\tthis.onMouseUp = e => this.handle('mouseup', e);\n\t\tthis.onMouseDown = e => this.handle('mousedown', e);\n\t\tthis.mouseMoveDetail = {\n\t\t\tdetail: {\n\t\t\t\tcursorEl: null,\n\t\t\t\tintersection: null\n\t\t\t}\n\t\t};\n\t},\n\tplay() {\n\t\tthis.el.addEventListener('click', this.onClick);\n\t\tthis.el.addEventListener('mouseleave', this.onMouseLeave);\n\t\tthis.el.addEventListener('mouseenter', this.onMouseEnter);\n\t\tthis.el.addEventListener('mouseup', this.onMouseUp);\n\t\tthis.el.addEventListener('mousedown', this.onMouseDown);\n\t},\n\tpause() {\n\t\tthis.el.removeEventListener('click', this.onClick);\n\t\tthis.el.removeEventListener('mouseleave', this.onMouseLeave);\n\t\tthis.el.removeEventListener('mouseenter', this.onMouseEnter);\n\t\tthis.el.removeEventListener('mouseup', this.onMouseUp);\n\t\tthis.el.removeEventListener('mousedown', this.onMouseDown);\n\t},\n\tupdate() {\n\t\tthis.remove();\n\t\tif (!this.data.html) return;\n\t\tconst mesh = new HTMLMesh(this.data.html);\n\t\tthis.el.setObject3D('html', mesh);\n\t\tthis.data.html.addEventListener('input', this.rerender);\n\t\tthis.data.html.addEventListener('change', this.rerender);\n\t\tthis.cursor = this.data.cursor ? this.data.cursor.object3D : null;\n\t},\n\ttick() {\n\t\tif (this.activeRaycaster) {\n\t\t\tconst intersection = this.activeRaycaster.components.raycaster.getIntersection(this.el);\n\t\t\tthis.mouseMoveDetail.detail.cursorEl = this.activeRaycaster;\n\t\t\tthis.mouseMoveDetail.detail.intersection = intersection;\n\t\t\tthis.handle('mousemove', this.mouseMoveDetail);\n\t\t}\n\t},\n\thandle(type, evt) {\n\t\tconst intersection = evt.detail.intersection;\n\t\tconst raycaster = evt.detail.cursorEl;\n\t\tif (type === 'mouseenter') {\n\t\t\tthis.activeRaycaster = raycaster;\n\t\t}\n\t\tif (type === 'mouseleave' && this.activeRaycaster === raycaster) {\n\t\t\tthis.activeRaycaster = null;\n\t\t}\n\t\tif (this.cursor) this.cursor.visible = false;\n\t\tif (intersection) {\n\t\t\tconst mesh = this.el.getObject3D('html');\n\t\t\tconst uv = intersection.uv;\n\t\t\t_event.type = type;\n\t\t\t_event.data.set( uv.x, 1 - uv.y );\n\t\t\tmesh.dispatchEvent( _event );\n\n\t\t\tif (this.cursor) {\n\t\t\t\tthis.cursor.visible = true;\n\t\t\t\tthis.cursor.parent.worldToLocal(this.cursor.position.copy(intersection.point));\n\t\t\t}\n\t\t}\n\t},\n\trerender() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh && !mesh.material.map.scheduleUpdate) {\n\t\t\tmesh.material.map.scheduleUpdate = setTimeout( () => mesh.material.map.update(), 16 );\n\t\t}\n\t},\n\tremove() {\n\t\tconst mesh = this.el.getObject3D('html');\n\t\tif (mesh) {\n\t\t\tthis.el.removeObject3D('html');\n\t\t\tthis.data.html.removeEventListener('input', this.rerender);\n\t\t\tthis.data.html.removeEventListener('change', this.rerender);\n\t\t\tmesh.dispose();\n\t\t}\n\t\tthis.activeRaycaster = null;\n\t\tthis.mouseMoveDetail.detail.cursorEl = null;\n\t\tthis.mouseMoveDetail.detail.intersection = null;\n\t\tthis.cursor = null;\n\t},\n});\n"],"names":["HTMLMesh","Mesh","constructor","dom","texture","HTMLTexture","geometry","PlaneGeometry","image","width","height","material","MeshBasicMaterial","map","toneMapped","transparent","onEvent","event","dispatchDOMEvent","super","this","addEventListener","dispose","canvases","delete","removeEventListener","CanvasTexture","html2canvas","anisotropy","encoding","sRGBEncoding","minFilter","LinearFilter","magFilter","observer","MutationObserver","scheduleUpdate","setTimeout","update","observe","attributes","childList","subtree","characterData","data","element","x","y","mouseEventInit","clientX","offsetWidth","offsetLeft","clientY","offsetHeight","offsetTop","view","ownerDocument","defaultView","rect","getBoundingClientRect","traverse","nodeType","Node","TEXT_NODE","COMMENT_NODE","left","right","top","bottom","dispatchEvent","MouseEvent","HTMLInputElement","type","min","max","property","parseFloat","proportion","value","InputEvent","bubbles","i","childNodes","length","htmlevent","needsUpdate","disconnect","clearTimeout","WeakMap","range","document","createRange","color","Color","drawText","style","string","maxWidth","textTransform","toUpperCase","context","font","fontWeight","fontSize","fontFamily","textBaseline","fillStyle","lines","ctx","text","words","split","currentLine","word","measureText","push","getLines","forEach","line","fillText","buildRectPath","w","h","r","beginPath","moveTo","arcTo","closePath","drawBorder","which","borderWidth","borderStyle","borderColor","strokeStyle","lineWidth","lineTo","stroke","offset","canvas","get","undefined","createElement","set","getContext","clipper","clips","isClipping","doClip","restore","minX","Infinity","minY","maxX","maxY","clip","Math","save","add","remove","pop","clearRect","drawElement","selectNode","nodeValue","trim","HTMLCanvasElement","display","dpr","window","devicePixelRatio","scale","drawImage","HTMLImageElement","getComputedStyle","borderRadius","backgroundColor","fill","borders","match","prevBorder","border","borderTopWidth","borderTopStyle","borderTopColor","accentColor","accentTextColor","sqrt","g","b","checked","currentTextAlign","textAlign","position","parseInt","paddingLeft","paddingTop","overflow","_event","THREE","Vector2","AFRAME","registerComponent","schema","html","cursor","init","rerender","bind","handle","onClick","e","onMouseLeave","onMouseEnter","onMouseUp","onMouseDown","mouseMoveDetail","detail","cursorEl","intersection","play","el","pause","mesh","setObject3D","object3D","tick","activeRaycaster","components","raycaster","getIntersection","evt","visible","getObject3D","uv","parent","worldToLocal","copy","point","removeObject3D"],"mappings":"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"}